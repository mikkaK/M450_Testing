version: "3.8"

services:
  letterix_frontend:
    image: registry.alasfood.ch/letterix_frontend:latest
    container_name: frontend
    restart: unless-stopped
    ports:
      - "3141:80"
    networks:
      - frontend
    env_file:
      - .env

  letterix_db:
    image: postgres:latest
    container_name: letterix_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: letterix
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - ./db_data:/var/lib/postgresql/data

  letterix_config_server:
    image: registry.alasfood.ch/letterix_config_server:latest
    container_name: config_server
    restart: unless-stopped
    env_file:
      - .env
    networks:
      backend:
        aliases:
          - configserver

  letterix_service_registry:
    image: registry.alasfood.ch/letterix_service_registry:latest
    container_name: service_registry
    restart: unless-stopped
    depends_on:
      - letterix_config_server
    env_file:
      - .env
    networks:
      backend:
        aliases:
          - serviceregistry
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761"]
      interval: 30s
      timeout: 10s
      retries: 5


  letterix_api_gateway:
    image: registry.alasfood.ch/letterix_api_gateway:latest
    container_name: api_gateway
    restart: unless-stopped
    ports:
      - "8060:8060"
    depends_on:
      letterix_service_registry:
        condition: service_healthy
    env_file:
      - .env
    networks:
      backend:
        aliases:
          - apigateway
      frontend:
        aliases:
          - apigateway


  letterix_cover-letter_service:
    image: registry.alasfood.ch/letterix_cover-letter_service:latest
    container_name: cover-letter_service
    restart: unless-stopped
    depends_on:
      - letterix_api_gateway
    env_file:
      - .env  
    networks:
      backend:
        aliases:
          - coverletterservice

networks:
  frontend:
    name: frontend_network
  backend:
    name: backend_network